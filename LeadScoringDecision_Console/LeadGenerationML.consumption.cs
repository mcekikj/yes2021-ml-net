// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.ML;
using Microsoft.ML.Data;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
namespace LeadScoringDecision_Console
{
    public partial class LeadGenerationML
    {
        /// <summary>
        /// model input class for LeadGenerationML.
        /// </summary>
        #region model input class
        public class ModelInput
        {
            [ColumnName(@"column1")]
            public float Column1 { get; set; }

            [ColumnName(@"Do Not Email")]
            public float Do_Not_Email { get; set; }

            [ColumnName(@"Converted")]
            public float Converted { get; set; }

            [ColumnName(@"TotalVisits")]
            public float TotalVisits { get; set; }

            [ColumnName(@"Total Time Spent on Website")]
            public float Total_Time_Spent_on_Website { get; set; }

            [ColumnName(@"Page Views Per Visit")]
            public float Page_Views_Per_Visit { get; set; }

            [ColumnName(@"Lead Origin_Landing Page Submission")]
            public float Lead_Origin_Landing_Page_Submission { get; set; }

            [ColumnName(@"Lead Origin_Lead Add Form")]
            public float Lead_Origin_Lead_Add_Form { get; set; }

            [ColumnName(@"Lead Origin_Lead Import")]
            public float Lead_Origin_Lead_Import { get; set; }

            [ColumnName(@"Lead Origin_Quick Add Form")]
            public float Lead_Origin_Quick_Add_Form { get; set; }

            [ColumnName(@"Lead Source_Facebook")]
            public float Lead_Source_Facebook { get; set; }

            [ColumnName(@"Lead Source_Google")]
            public float Lead_Source_Google { get; set; }

            [ColumnName(@"Lead Source_Olark Chat")]
            public float Lead_Source_Olark_Chat { get; set; }

            [ColumnName(@"Lead Source_Organic Search")]
            public float Lead_Source_Organic_Search { get; set; }

            [ColumnName(@"Lead Source_Other Sources")]
            public float Lead_Source_Other_Sources { get; set; }

            [ColumnName(@"Lead Source_Reference")]
            public float Lead_Source_Reference { get; set; }

            [ColumnName(@"Lead Source_Referral Sites")]
            public float Lead_Source_Referral_Sites { get; set; }

            [ColumnName(@"Lead Source_Welingak Website")]
            public float Lead_Source_Welingak_Website { get; set; }

            [ColumnName(@"Last Activity_Email Bounced")]
            public float Last_Activity_Email_Bounced { get; set; }

            [ColumnName(@"Last Activity_Email Link Clicked")]
            public float Last_Activity_Email_Link_Clicked { get; set; }

            [ColumnName(@"Last Activity_Email Opened")]
            public float Last_Activity_Email_Opened { get; set; }

            [ColumnName(@"Last Activity_Form Submitted on Website")]
            public float Last_Activity_Form_Submitted_on_Website { get; set; }

            [ColumnName(@"Last Activity_Olark Chat Conversation")]
            public float Last_Activity_Olark_Chat_Conversation { get; set; }

            [ColumnName(@"Last Activity_Other Activity")]
            public float Last_Activity_Other_Activity { get; set; }

            [ColumnName(@"Last Activity_Page Visited on Website")]
            public float Last_Activity_Page_Visited_on_Website { get; set; }

            [ColumnName(@"Last Activity_SMS Sent")]
            public float Last_Activity_SMS_Sent { get; set; }

            [ColumnName(@"Last Activity_Unreachable")]
            public float Last_Activity_Unreachable { get; set; }

            [ColumnName(@"Last Activity_Unsubscribed")]
            public float Last_Activity_Unsubscribed { get; set; }

            [ColumnName(@"Specialization_Business Administration")]
            public float Specialization_Business_Administration { get; set; }

            [ColumnName(@"Specialization_E-Business")]
            public float Specialization_E_Business { get; set; }

            [ColumnName(@"Specialization_E-COMMERCE")]
            public float Specialization_E_COMMERCE { get; set; }

            [ColumnName(@"Specialization_Finance Management")]
            public float Specialization_Finance_Management { get; set; }

            [ColumnName(@"Specialization_Healthcare Management")]
            public float Specialization_Healthcare_Management { get; set; }

            [ColumnName(@"Specialization_Hospitality Management")]
            public float Specialization_Hospitality_Management { get; set; }

            [ColumnName(@"Specialization_Human Resource Management")]
            public float Specialization_Human_Resource_Management { get; set; }

            [ColumnName(@"Specialization_IT Projects Management")]
            public float Specialization_IT_Projects_Management { get; set; }

            [ColumnName(@"Specialization_International Business")]
            public float Specialization_International_Business { get; set; }

            [ColumnName(@"Specialization_Marketing Management")]
            public float Specialization_Marketing_Management { get; set; }

            [ColumnName(@"Specialization_Media and Advertising")]
            public float Specialization_Media_and_Advertising { get; set; }

            [ColumnName(@"Specialization_Operations Management")]
            public float Specialization_Operations_Management { get; set; }

            [ColumnName(@"Specialization_Others")]
            public float Specialization_Others { get; set; }

            [ColumnName(@"Specialization_Retail Management")]
            public float Specialization_Retail_Management { get; set; }

            [ColumnName(@"Specialization_Rural and Agribusiness")]
            public float Specialization_Rural_and_Agribusiness { get; set; }

            [ColumnName(@"Specialization_Services Excellence")]
            public float Specialization_Services_Excellence { get; set; }

            [ColumnName(@"Specialization_Supply Chain Management")]
            public float Specialization_Supply_Chain_Management { get; set; }

            [ColumnName(@"Specialization_Travel and Tourism")]
            public float Specialization_Travel_and_Tourism { get; set; }

            [ColumnName(@"What is your current occupation_Housewife")]
            public float What_is_your_current_occupation_Housewife { get; set; }

            [ColumnName(@"What is your current occupation_Other")]
            public float What_is_your_current_occupation_Other { get; set; }

            [ColumnName(@"What is your current occupation_Student")]
            public float What_is_your_current_occupation_Student { get; set; }

            [ColumnName(@"What is your current occupation_Unemployed")]
            public float What_is_your_current_occupation_Unemployed { get; set; }

            [ColumnName(@"What is your current occupation_Working Professional")]
            public float What_is_your_current_occupation_Working_Professional { get; set; }

        }

        #endregion

        /// <summary>
        /// model output class for LeadGenerationML.
        /// </summary>
        #region model output class
        public class ModelOutput
        {
            [ColumnName("PredictedLabel")]
            public float Prediction { get; set; }

            public float[] Score { get; set; }
        }

        #endregion

        private static string MLNetModelPath = Path.GetFullPath("LeadGenerationML.zip");

        public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);

        /// <summary>
        /// Use this method to predict on <see cref="ModelInput"/>.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" ModelOutput"/></returns>
        public static ModelOutput Predict(ModelInput input)
        {
            var predEngine = PredictEngine.Value;
            return predEngine.Predict(input);
        }

        private static PredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
        {
            var mlContext = new MLContext();
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
        }
    }
}
